apply plugin: 'java'
apply plugin: 'maven'

group = 'com.unquietcode.tools.flapi.test'
version = '0.0-DEVELOPMENT'
sourceCompatibility = '1.8'

// add the gradle plugin
buildscript {
	repositories {
		mavenLocal()
	}

	dependencies {
		classpath 'com.unquietcode.tools.flapi:flapi-gradle-plugin:0.0-DEVELOPMENT'
	}
}
apply plugin: 'com.unquietcode.flapi.plugin'

install.dependsOn test

// ------------------------------------------------------- //


repositories {
	mavenLocal()
}

dependencies {
	compileOnly 'com.unquietcode.tools.flapi:flapi:0.0-DEVELOPMENT'
	testCompile 'com.unquietcode.tools.flapi:flapi:0.0-DEVELOPMENT'
}


import unquietcode.tools.flapi.Descriptor
import unquietcode.tools.flapi.DescriptorMaker
import unquietcode.tools.flapi.Flapi

import java.util.concurrent.atomic.AtomicInteger

class TestInlineDescriptor implements DescriptorMaker {
	static final def counter = new AtomicInteger(1);


	@Override
	Descriptor descriptor() {
		return Flapi.builder()
			.setPackage("unquietcode.tools.flapi.plugin.test.builder"+counter.getAndIncrement())
			.setDescriptorName("Test")

			.addMethod("done()").last()
		.build();
	}
}

flapi {
	descriptors = [
		'unquietcode.tools.flapi.plugin.TestDescriptor',  // DescriptorMaker FQCN
		TestInlineDescriptor,                             // DescriptorMaker class
		new TestInlineDescriptor(),                       // DescriptorMaker instance
		new TestInlineDescriptor().descriptor()           // Descriptor instance
	]
	includeRuntime = true
}